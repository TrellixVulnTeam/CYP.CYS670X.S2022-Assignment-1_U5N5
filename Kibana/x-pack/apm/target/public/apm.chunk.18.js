/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements. 
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window.apm_bundle_jsonpfunction=window.apm_bundle_jsonpfunction||[]).push([[18],{1048:function(e,t,a){"use strict";a.r(t),a.d(t,"ApmAgents",(function(){return v}));var n=a(8),i=a(1),o=a.n(i),l=a(0),r=a(29),s=a.n(r),u=a(11),c=a(202),p=a(189),m=a(118),g=a.n(m);const d=["{","}"];function f({text:e,docLinks:t}){const a=Array.isArray(e)?e.join("\n"):e;return g.a.parse(a,d),g.a.render(a,{config:{docs:{base_url:null==t?void 0:t.ELASTIC_WEBSITE_URL,version:null==t?void 0:t.DOC_LINK_VERSION}}})}function h({agentName:e,title:t}){return o.a.createElement(n.EuiFlexGroup,{justifyContent:"flexStart",alignItems:"center"},o.a.createElement(n.EuiFlexItem,{grow:!1},o.a.createElement(c.a,{size:"xl",agentName:e})),o.a.createElement(n.EuiFlexItem,{grow:1},o.a.createElement(n.EuiFlexGroup,{direction:"column",gutterSize:"none"},o.a.createElement(n.EuiFlexItem,null,o.a.createElement(n.EuiText,null,o.a.createElement("h4",null,t))),o.a.createElement(n.EuiFlexItem,null,o.a.createElement(n.EuiText,{size:"s"},o.a.createElement("p",null,l.i18n.translate("xpack.apm.fleet_integration.settings.apmAgent.description",{defaultMessage:"Configure instrumentation for {title} applications.",values:{title:t}})))))))}function k({markdown:e}){return o.a.createElement(u.Markdown,{className:"euiText",markdown:e,openLinksInNewTab:!0,whiteListedRules:["backticks","emphasis","link","list"]})}function x({variantId:e,apmServerUrl:t,secretToken:a}){const i=Object(p.a)({variantId:e,policyDetails:{apmServerUrl:t,secretToken:a}});return o.a.createElement(n.EuiCodeBlock,{isCopyable:!0,language:"bash"},i)}const C=s()(n.EuiAccordion).withConfig({displayName:"StyledEuiAccordion",componentId:"sc-575xc3-0"})([".euiAccordion__childWrapper{transform:none;}"]);function A({policy:e,newPolicy:t,onChange:a,agentName:i,title:r,createAgentInstructions:s,variantId:c,AgentRuntimeAttachment:p}){var m,g;const d=Object(u.useKibana)().services.docLinks,A=null==t||null===(m=t.inputs)||void 0===m||null===(g=m[0])||void 0===g?void 0:g.vars,P=null==A?void 0:A.url.value,v=null==A?void 0:A.secret_token.value,y=s(P,v).map((({title:e,textPre:t,textPost:a,customComponentName:i,commands:l},r)=>{const s=l?f({text:l,docLinks:d}):"";return o.a.createElement("section",{key:r},o.a.createElement(n.EuiText,null,o.a.createElement("h4",null,e)),o.a.createElement(n.EuiSpacer,{size:"s"}),o.a.createElement(n.EuiText,{color:"subdued",size:"s"},t&&o.a.createElement(k,{markdown:f({text:t,docLinks:d})}),s&&o.a.createElement(o.a.Fragment,null,o.a.createElement(n.EuiSpacer,{size:"s"}),o.a.createElement(n.EuiCodeBlock,{isCopyable:!0,language:"bash"},s)),"TutorialConfigAgent"===i&&o.a.createElement(x,{variantId:c,apmServerUrl:P,secretToken:v}),"TutorialConfigAgentRumScript"===i&&o.a.createElement(x,{variantId:"js_script",apmServerUrl:P,secretToken:v}),a&&o.a.createElement(o.a.Fragment,null,o.a.createElement(n.EuiSpacer,null),o.a.createElement(k,{markdown:f({text:a,docLinks:d})}))),o.a.createElement(n.EuiSpacer,null))})),E=o.a.createElement(o.a.Fragment,null,o.a.createElement(n.EuiSpacer,null),y);return o.a.createElement(C,{id:i,buttonContent:o.a.createElement(h,{agentName:i,title:r})},p?o.a.createElement(o.a.Fragment,null,o.a.createElement(n.EuiSpacer,null),o.a.createElement(n.EuiTabbedContent,{tabs:[{id:"manual-instrumentation",name:l.i18n.translate("xpack.apm.fleetIntegration.apmAgent.runtimeAttachment.manualInstrumentation",{defaultMessage:"Manual instrumentation"}),content:E},{id:"auto-attachment",name:o.a.createElement(n.EuiFlexGroup,{justifyContent:"flexStart",alignItems:"baseline",gutterSize:"s"},o.a.createElement(n.EuiFlexItem,{grow:!1},l.i18n.translate("xpack.apm.fleetIntegration.apmAgent.runtimeAttachment.autoAttachment",{defaultMessage:"Auto-Attachment"})),o.a.createElement(n.EuiFlexItem,{grow:!1},o.a.createElement(n.EuiBetaBadge,{label:l.i18n.translate("xpack.apm.fleetIntegration.apmAgent.runtimeAttachment.betaBadge.label",{defaultMessage:"BETA"}),tooltipContent:l.i18n.translate("xpack.apm.fleetIntegration.apmAgent.runtimeAttachment.betaBadge.tooltipContent",{defaultMessage:"Auto-attachment for Java is not GA. Please help us by reporting any bugs."})}))),content:o.a.createElement(o.a.Fragment,null,o.a.createElement(n.EuiSpacer,null),o.a.createElement(p,{policy:e,newPolicy:t,onChange:a}))}]})):E)}const P=[{agentName:"java",title:"Java",variantId:"java",createAgentInstructions:(e="",t="")=>[{title:l.i18n.translate("xpack.apm.tutorial.javaClient.download.title",{defaultMessage:"Download the APM agent"}),textPre:l.i18n.translate("xpack.apm.tutorial.javaClient.download.textPre",{defaultMessage:"Download the agent jar from [Maven Central]({mavenCentralLink}). Do **not** add the agent as a dependency to your application.",values:{mavenCentralLink:"http://search.maven.org/#search%7Cga%7C1%7Ca%3Aelastic-apm-agent"}})},{title:l.i18n.translate("xpack.apm.tutorial.javaClient.startApplication.title",{defaultMessage:"Start your application with the javaagent flag"}),textPre:l.i18n.translate("xpack.apm.tutorial.javaClient.startApplication.textPre",{defaultMessage:"Add the `-javaagent` flag and configure the agent with system properties.\n\n * Set the required service name (allowed characters: a-z, A-Z, 0-9, -, _, and space)\n * Set the custom APM Server URL (default: {customApmServerUrl})\n * Set the APM Server secret token\n * Set the service environment\n * Set the base package of your application",values:{customApmServerUrl:"http://localhost:8200"}}),customComponentName:"TutorialConfigAgent",textPost:l.i18n.translate("xpack.apm.tutorial.javaClient.startApplication.textPost",{defaultMessage:"See the [documentation]({documentationLink}) for configuration options and advanced usage.",values:{documentationLink:"{config.docs.base_url}guide/en/apm/agent/java/current/index.html"}})}]},{agentName:"rum-js",title:"JavaScript (Real User Monitoring)",variantId:"js",createAgentInstructions:(e="")=>[{title:l.i18n.translate("xpack.apm.tutorial.jsClient.enableRealUserMonitoring.title",{defaultMessage:"Enable Real User Monitoring support in APM Server"}),textPre:l.i18n.translate("xpack.apm.tutorial.jsClient.enableRealUserMonitoring.textPre",{defaultMessage:"APM Server disables RUM support by default. See the [documentation]({documentationLink}) for details on how to enable RUM support.",values:{documentationLink:"{config.docs.base_url}guide/en/apm/server/{config.docs.version}/configuration-rum.html"}})},{title:l.i18n.translate("xpack.apm.tutorial.jsClient.installDependency.title",{defaultMessage:"Set up the Agent as a dependency"}),textPre:l.i18n.translate("xpack.apm.tutorial.jsClient.installDependency.textPre",{defaultMessage:"You can install the Agent as a dependency to your application with `npm install @elastic/apm-rum --save`.\n\nThe Agent can then be initialized and configured in your application like this:"}),customComponentName:"TutorialConfigAgent",textPost:l.i18n.translate("xpack.apm.tutorial.jsClient.installDependency.textPost",{defaultMessage:"Framework integrations, like React or Angular, have custom dependencies. See the [integration documentation]({docLink}) for more information.",values:{docLink:"{config.docs.base_url}guide/en/apm/agent/rum-js/current/framework-integrations.html"}})},{title:l.i18n.translate("xpack.apm.tutorial.jsClient.scriptTags.title",{defaultMessage:"Set up the Agent with Script Tags"}),textPre:l.i18n.translate("xpack.apm.tutorial.jsClient.scriptTags.textPre",{defaultMessage:"Alternatively, you can use Script tags to set up and configure the Agent. Add a `<script>` tag to the HTML page and use the `elasticApm` global object to load and initialize the agent. Don't forget to download the latest version of the RUM Agent from [GitHub]({GitHubLink}) or [UNPKG]({UnpkgLink}), and host the file on your Server/CDN before deploying to production.",values:{GitHubLink:"https://github.com/elastic/apm-agent-rum-js/releases/latest",UnpkgLink:"https://unpkg.com/@elastic/apm-rum/dist/bundles/elastic-apm-rum.umd.min.js"}}),customComponentName:"TutorialConfigAgentRumScript"}]},{agentName:"nodejs",title:"Node.js",variantId:"node",createAgentInstructions:(e="",t="")=>[{title:l.i18n.translate("xpack.apm.tutorial.nodeClient.install.title",{defaultMessage:"Install the APM agent"}),textPre:l.i18n.translate("xpack.apm.tutorial.nodeClient.install.textPre",{defaultMessage:"Install the APM agent for Node.js as a dependency to your application."}),commands:["npm install elastic-apm-node --save"]},{title:l.i18n.translate("xpack.apm.tutorial.nodeClient.configure.title",{defaultMessage:"Configure the agent"}),textPre:l.i18n.translate("xpack.apm.tutorial.nodeClient.configure.textPre",{defaultMessage:"Agents are libraries that run inside of your application process. APM services are created programmatically based on the `serviceName`. This agent supports a variety of frameworks but can also be used with your custom stack."}),customComponentName:"TutorialConfigAgent",textPost:l.i18n.translate("xpack.apm.tutorial.nodeClient.configure.textPost",{defaultMessage:"See [the documentation]({documentationLink}) for advanced usage, including how to use with [Babel/ES Modules]({babelEsModulesLink}).",values:{documentationLink:"{config.docs.base_url}guide/en/apm/agent/nodejs/current/index.html",babelEsModulesLink:"{config.docs.base_url}guide/en/apm/agent/nodejs/current/advanced-setup.html#es-modules"}})}]},{agentName:"python",title:"Django",variantId:"django",createAgentInstructions:(e="",t="")=>[{title:l.i18n.translate("xpack.apm.tutorial.djangoClient.install.title",{defaultMessage:"Install the APM agent"}),textPre:l.i18n.translate("xpack.apm.tutorial.djangoClient.install.textPre",{defaultMessage:"Install the APM agent for Python as a dependency."}),commands:["$ pip install elastic-apm"]},{title:l.i18n.translate("xpack.apm.tutorial.djangoClient.configure.title",{defaultMessage:"Configure the agent"}),textPre:l.i18n.translate("xpack.apm.tutorial.djangoClient.configure.textPre",{defaultMessage:"Agents are libraries that run inside of your application process. APM services are created programmatically based on the `SERVICE_NAME`."}),customComponentName:"TutorialConfigAgent",textPost:l.i18n.translate("xpack.apm.tutorial.djangoClient.configure.textPost",{defaultMessage:"See the [documentation]({documentationLink}) for advanced usage.",values:{documentationLink:"{config.docs.base_url}guide/en/apm/agent/python/current/django-support.html"}})}]},{agentName:"python",title:"Flask",variantId:"flask",createAgentInstructions:(e="",t="")=>[{title:l.i18n.translate("xpack.apm.tutorial.flaskClient.install.title",{defaultMessage:"Install the APM agent"}),textPre:l.i18n.translate("xpack.apm.tutorial.flaskClient.install.textPre",{defaultMessage:"Install the APM agent for Python as a dependency."}),commands:["$ pip install elastic-apm[flask]"]},{title:l.i18n.translate("xpack.apm.tutorial.flaskClient.configure.title",{defaultMessage:"Configure the agent"}),textPre:l.i18n.translate("xpack.apm.tutorial.flaskClient.configure.textPre",{defaultMessage:"Agents are libraries that run inside of your application process. APM services are created programmatically based on the `SERVICE_NAME`."}),customComponentName:"TutorialConfigAgent",textPost:l.i18n.translate("xpack.apm.tutorial.flaskClient.configure.textPost",{defaultMessage:"See the [documentation]({documentationLink}) for advanced usage.",values:{documentationLink:"{config.docs.base_url}guide/en/apm/agent/python/current/flask-support.html"}})}]},{agentName:"ruby",title:"Ruby on Rails",variantId:"rails",createAgentInstructions:(e="",t="")=>[{title:l.i18n.translate("xpack.apm.tutorial.railsClient.install.title",{defaultMessage:"Install the APM agent"}),textPre:l.i18n.translate("xpack.apm.tutorial.railsClient.install.textPre",{defaultMessage:"Add the agent to your Gemfile."}),commands:["gem 'elastic-apm'"]},{title:l.i18n.translate("xpack.apm.tutorial.railsClient.configure.title",{defaultMessage:"Configure the agent"}),textPre:l.i18n.translate("xpack.apm.tutorial.railsClient.configure.textPre",{defaultMessage:"APM is automatically started when your app boots. Configure the agent, by creating the config file {configFile}",values:{configFile:"`config/elastic_apm.yml`"}}),customComponentName:"TutorialConfigAgent",textPost:l.i18n.translate("xpack.apm.tutorial.railsClient.configure.textPost",{defaultMessage:"See the [documentation]({documentationLink}) for configuration options and advanced usage.\n\n",values:{documentationLink:"{config.docs.base_url}guide/en/apm/agent/ruby/current/index.html"}})}]},{agentName:"ruby",title:"Rack",variantId:"rack",createAgentInstructions:(e="",t="")=>[{title:l.i18n.translate("xpack.apm.tutorial.rackClient.install.title",{defaultMessage:"Install the APM agent"}),textPre:l.i18n.translate("xpack.apm.tutorial.rackClient.install.textPre",{defaultMessage:"Add the agent to your Gemfile."}),commands:["gem 'elastic-apm'"]},{title:l.i18n.translate("xpack.apm.tutorial.rackClient.configure.title",{defaultMessage:"Configure the agent"}),textPre:l.i18n.translate("xpack.apm.tutorial.rackClient.configure.textPre",{defaultMessage:"For Rack or a compatible framework (e.g. Sinatra), include the middleware in your app and start the agent."}),commands:`# config.ru\n  require 'sinatra/base'\n\n  class MySinatraApp < Sinatra::Base\n    use ElasticAPM::Middleware\n\n    # ...\n  end\n\n  ElasticAPM.start(\n    app: MySinatraApp, # ${l.i18n.translate("xpack.apm.tutorial.rackClient.configure.commands.requiredComment",{defaultMessage:"required"})}\n    config_file: '' # ${l.i18n.translate("xpack.apm.tutorial.rackClient.configure.commands.optionalComment",{defaultMessage:"optional, defaults to config/elastic_apm.yml"})}\n  )\n\n  run MySinatraApp\n\n  at_exit {curlyOpen} ElasticAPM.stop {curlyClose}`.split("\n")},{title:l.i18n.translate("xpack.apm.tutorial.rackClient.createConfig.title",{defaultMessage:"Create config file"}),textPre:l.i18n.translate("xpack.apm.tutorial.rackClient.createConfig.textPre",{defaultMessage:"Create a config file {configFile}:",values:{configFile:"`config/elastic_apm.yml`"}}),customComponentName:"TutorialConfigAgent",textPost:l.i18n.translate("xpack.apm.tutorial.rackClient.createConfig.textPost",{defaultMessage:"See the [documentation]({documentationLink}) for configuration options and advanced usage.\n\n",values:{documentationLink:"{config.docs.base_url}guide/en/apm/agent/ruby/current/index.html"}})}]},{agentName:"go",title:"Go",variantId:"go",createAgentInstructions:(e="",t="")=>[{title:l.i18n.translate("xpack.apm.tutorial.goClient.install.title",{defaultMessage:"Install the APM agent"}),textPre:l.i18n.translate("xpack.apm.tutorial.goClient.install.textPre",{defaultMessage:"Install the APM agent packages for Go."}),commands:["go get go.elastic.co/apm"]},{title:l.i18n.translate("xpack.apm.tutorial.goClient.configure.title",{defaultMessage:"Configure the agent"}),textPre:l.i18n.translate("xpack.apm.tutorial.goClient.configure.textPre",{defaultMessage:"Agents are libraries that run inside of your application process. APM services are created programmatically based on the executable file name, or the `ELASTIC_APM_SERVICE_NAME` environment variable."}),customComponentName:"TutorialConfigAgent",textPost:l.i18n.translate("xpack.apm.tutorial.goClient.configure.textPost",{defaultMessage:"See the [documentation]({documentationLink}) for advanced configuration.",values:{documentationLink:"{config.docs.base_url}guide/en/apm/agent/go/current/configuration.html"}})},{title:l.i18n.translate("xpack.apm.tutorial.goClient.instrument.title",{defaultMessage:"Instrument your application"}),textPre:l.i18n.translate("xpack.apm.tutorial.goClient.instrument.textPre",{defaultMessage:"Instrument your Go application by using one of the provided instrumentation modules or by using the tracer API directly."}),commands:'import (\n\t"net/http"\n\n\t"go.elastic.co/apm/module/apmhttp"\n)\n\nfunc main() {curlyOpen}\n\tmux := http.NewServeMux()\n\t...\n\thttp.ListenAndServe(":8080", apmhttp.Wrap(mux))\n{curlyClose}\n'.split("\n"),textPost:l.i18n.translate("xpack.apm.tutorial.goClient.instrument.textPost",{defaultMessage:"See the [documentation]({documentationLink}) for a detailed guide to instrumenting Go source code.",values:{documentationLink:"{config.docs.base_url}guide/en/apm/agent/go/current/instrumenting-source.html"}})}]},{agentName:"dotnet",title:".NET",variantId:"dotnet",createAgentInstructions:(e="",t="")=>[{title:l.i18n.translate("xpack.apm.tutorial.dotNetClient.download.title",{defaultMessage:"Download the APM agent"}),textPre:l.i18n.translate("xpack.apm.tutorial.dotNetClient.download.textPre",{defaultMessage:"Add the the agent package(s) from [NuGet]({allNuGetPackagesLink}) to your .NET application. There are multiple       NuGet packages available for different use cases. \n\nFor an ASP.NET Core application with Entity Framework       Core download the [Elastic.Apm.NetCoreAll]({netCoreAllApmPackageLink}) package. This package will automatically add every       agent component to your application. \n\n In case you would like to minimize the dependencies, you can use the       [Elastic.Apm.AspNetCore]({aspNetCorePackageLink}) package for just       ASP.NET Core monitoring or the [Elastic.Apm.EfCore]({efCorePackageLink}) package for just Entity Framework Core monitoring. \n\n In       case you only want to use the public Agent API for manual instrumentation use the [Elastic.Apm]({elasticApmPackageLink}) package.",values:{allNuGetPackagesLink:"https://www.nuget.org/packages?q=Elastic.apm",netCoreAllApmPackageLink:"https://www.nuget.org/packages/Elastic.Apm.NetCoreAll",aspNetCorePackageLink:"https://www.nuget.org/packages/Elastic.Apm.AspNetCore",efCorePackageLink:"https://www.nuget.org/packages/Elastic.Apm.EntityFrameworkCore",elasticApmPackageLink:"https://www.nuget.org/packages/Elastic.Apm"}})},{title:l.i18n.translate("xpack.apm.tutorial.dotNetClient.configureApplication.title",{defaultMessage:"Add the agent to the application"}),textPre:l.i18n.translate("xpack.apm.tutorial.dotNetClient.configureApplication.textPre",{defaultMessage:"In case of ASP.NET Core with the `Elastic.Apm.NetCoreAll` package, call the `UseAllElasticApm`       method in the `Configure` method within the `Startup.cs` file."}),commands:"public class Startup\n{curlyOpen}\n  public void Configure(IApplicationBuilder app, IHostingEnvironment env)\n  {curlyOpen}\n    app.UseAllElasticApm(Configuration);\n    //…rest of the method\n  {curlyClose}\n  //…rest of the class\n{curlyClose}".split("\n"),textPost:l.i18n.translate("xpack.apm.tutorial.dotNetClient.configureApplication.textPost",{defaultMessage:"Passing an `IConfiguration` instance is optional and by doing so, the agent will read config settings through this       `IConfiguration` instance (e.g. from the `appsettings.json` file)."})},{title:l.i18n.translate("xpack.apm.tutorial.dotNetClient.configureAgent.title",{defaultMessage:"Sample appsettings.json file:"}),customComponentName:"TutorialConfigAgent",textPost:l.i18n.translate("xpack.apm.tutorial.dotNetClient.configureAgent.textPost",{defaultMessage:"In case you don’t pass an `IConfiguration` instance to the agent (e.g. in case of non ASP.NET Core applications)       you can also configure the agent through environment variables. \n       See [the documentation]({documentationLink}) for advanced usage.",values:{documentationLink:"{config.docs.base_url}guide/en/apm/agent/dotnet/current/configuration.html"}})}]},{agentName:"php",title:"PHP",variantId:"php",createAgentInstructions:(e="",t="")=>[{title:l.i18n.translate("xpack.apm.tutorial.phpClient.download.title",{defaultMessage:"Download the APM agent"}),textPre:l.i18n.translate("xpack.apm.tutorial.phpClient.download.textPre",{defaultMessage:"Download the package corresponding to your platform from [GitHub releases]({githubReleasesLink}).",values:{githubReleasesLink:"https://github.com/elastic/apm-agent-php/releases"}})},{title:l.i18n.translate("xpack.apm.tutorial.phpClient.installPackage.title",{defaultMessage:"Install the downloaded package"}),textPre:l.i18n.translate("xpack.apm.tutorial.phpClient.installPackage.textPre",{defaultMessage:"For example on Alpine Linux using APK package:"}),commands:["apk add --allow-untrusted <package-file>.apk"],textPost:l.i18n.translate("xpack.apm.tutorial.phpClient.installPackage.textPost",{defaultMessage:"See the [documentation]({documentationLink}) for installation commands on other supported platforms and advanced installation.",values:{documentationLink:"{config.docs.base_url}guide/en/apm/agent/php/current/setup.html"}})},{title:l.i18n.translate("xpack.apm.tutorial.phpClient.configureAgent.title",{defaultMessage:"Configure the agent"}),textPre:l.i18n.translate("xpack.apm.tutorial.phpClient.configureAgent.textPre",{defaultMessage:"APM is automatically started when your app boots. Configure the agent either via `php.ini` file:"}),customComponentName:"TutorialConfigAgent",textPost:l.i18n.translate("xpack.apm.tutorial.phpClient.configure.textPost",{defaultMessage:"See the [documentation]({documentationLink}) for configuration options and advanced usage.\n\n",values:{documentationLink:"{config.docs.base_url}guide/en/apm/agent/php/current/configuration.html"}})}]}];function v({policy:e,newPolicy:t,onChange:a}){return o.a.createElement("div",null,P.map((({agentName:l,title:r,createAgentInstructions:s,variantId:u,AgentRuntimeAttachment:c})=>o.a.createElement(i.Fragment,{key:l},o.a.createElement(n.EuiPanel,null,o.a.createElement(A,{agentName:l,title:r,createAgentInstructions:s,variantId:u,AgentRuntimeAttachment:c,policy:e,newPolicy:t,onChange:a})),o.a.createElement(n.EuiSpacer,null)))))}},60:function(e,t,a){"use strict";a.d(t,"a",(function(){return o}));var n=a(1),i=a(29);function o(){return Object(n.useContext)(i.ThemeContext)}},80:function(e,t,a){"use strict";a.d(t,"a",(function(){return n})),a.d(t,"e",(function(){return o})),a.d(t,"b",(function(){return l})),a.d(t,"f",(function(){return r})),a.d(t,"c",(function(){return s})),a.d(t,"d",(function(){return u})),a.d(t,"g",(function(){return c}));const n=["otlp","opentelemetry/cpp","opentelemetry/dotnet","opentelemetry/erlang","opentelemetry/go","opentelemetry/java","opentelemetry/nodejs","opentelemetry/php","opentelemetry/python","opentelemetry/ruby","opentelemetry/swift","opentelemetry/webjs"],i=["java","opentelemetry/java"];function o(e){return i.includes(e)}const l=["js-base","rum-js","opentelemetry/webjs"];function r(e){return l.includes(e)}function s(e){const t=e&&e.toLowerCase();return"ios/swift"===t||"opentelemetry/swift"===t}function u(e,t){return"ruby"===e&&"jruby"===(null==t?void 0:t.toLowerCase())}function c(e){return null==e?void 0:e.toLowerCase().startsWith("aws_lambda")}}}]);