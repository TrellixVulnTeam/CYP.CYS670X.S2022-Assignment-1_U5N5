/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements. 
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window.ml_bundle_jsonpfunction=window.ml_bundle_jsonpfunction||[]).push([[15],{260:function(e,t,a){"use strict";a.d(t,"a",(function(){return i})),a.d(t,"c",(function(){return o})),a.d(t,"b",(function(){return u}));var n=a(8),r=a(80),s=a(129),l=a(29);function i(e){return function(e,t){var a,n;const l=Math.ceil(null!==(a=Object(r.s)(e.map((e=>e.analysis_config.bucket_span))))&&void 0!==a?a:0),i=Math.ceil(null!==(n=Object(r.s)(t.map((e=>e.query_delay)).filter(s.a)))&&void 0!==n?n:0),o=Math.max(120,2*l)+i+1;return`${Math.ceil(o/60)}m`}(e,e.map((e=>e.datafeed_config)))}function o(e){const t=Object(l.a)(e.analysis_config.bucket_span);if(null===t)throw new Error("Unable to resolve a bucket span length");return Math.ceil(60/t.asSeconds())}const c=["datafeed","mml","delayedData","errorMessages"];function u(e){var t,a,r,s,l,i,o,u,d,p,m,y,b,g;const _={datafeed:{enabled:null===(t=null==e||null===(a=e.datafeed)||void 0===a?void 0:a.enabled)||void 0===t||t},mml:{enabled:null===(r=null==e||null===(s=e.mml)||void 0===s?void 0:s.enabled)||void 0===r||r},delayedData:{enabled:null===(l=null==e||null===(i=e.delayedData)||void 0===i?void 0:i.enabled)||void 0===l||l,docsCount:null!==(o=null==e||null===(u=e.delayedData)||void 0===u?void 0:u.docsCount)&&void 0!==o?o:1,timeInterval:null!==(d=null==e||null===(p=e.delayedData)||void 0===p?void 0:p.timeInterval)&&void 0!==d?d:null},behindRealtime:{enabled:null===(m=null==e||null===(y=e.behindRealtime)||void 0===y?void 0:y.enabled)||void 0===m||m},errorMessages:{enabled:null===(b=null==e||null===(g=e.errorMessages)||void 0===g?void 0:g.enabled)||void 0===b||b}};return Object(n.pick)(_,c)}},261:function(e,t,a){"use strict";a.d(t,"a",(function(){return i})),a.d(t,"b",(function(){return c}));var n=a(150),r=a(82),s=a(115),l=a(209);const i={TYPICAL:"typical",ACTUAL:"actual",TYPICAL_TO_ACTUAL:"typical to actual"};function o(e,t=!1){return e.split(",").map(t?e=>Math.round(100*Number(e))/100:e=>Number(e)).reverse()}async function c(e,t,a,c){var u;const{query:d,timeFilters:p}=c,m=d&&""!==d.query;let y;const b=Object(l.a)([{id:t}]);m&&d.language===s.c.KUERY?y=Object(n.f)(Object(n.d)(d.query),b):m&&(null==d?void 0:d.language)===s.c.LUCENE&&(y=Object(n.e)(d.query));const g=[{term:{job_id:t}},{term:{result_type:"record"}}];let _={must:g};y&&y.bool?_={..._,...y.bool}:y&&_.must.push(y);const h={query:{bool:_},size:1e3,_source:{excludes:[]}};if(p){const e={range:{timestamp:{gte:`${p.from}`,lte:p.to}}};g.push(e)}let f=null;try{f=await e.anomalySearch({body:h},[t])}catch(e){}return{type:"FeatureCollection",features:(null===(u=f)||void 0===u?void 0:u.hits.hits.map((({_source:e})=>{const t=e.geo_results,n=t&&t.actual_point,s=t&&t.typical_point;let l,c=[],u=[],d=[],p=[];return void 0!==n&&(d=o(n),p=o(n,!0)),void 0!==s&&(c=o(s),u=o(s,!0)),l=a===i.TYPICAL||a===i.ACTUAL?{type:"Point",coordinates:a===i.TYPICAL?c:d}:{type:"LineString",coordinates:[c,d]},{type:"Feature",geometry:l,properties:{actual:d,actualDisplay:p,typical:c,typicalDisplay:u,fieldName:e.field_name,functionDescription:e.function_description,timestamp:Object(r.c)(e.timestamp),record_score:Math.floor(e.record_score),...e.partition_field_name?{[e.partition_field_name]:e.partition_field_value}:{},...e.by_field_name?{[e.by_field_name]:e.by_field_value}:{},...e.over_field_name?{[e.over_field_name]:e.over_field_value}:{}}}})))||[]}}},375:function(e,t,a){"use strict";a.d(t,"b",(function(){return l})),a.d(t,"a",(function(){return AnomalySourceFactory}));var n=a(5),r=a.n(n),s=a(105);const l="ML_ANOMALIES";class AnomalySourceFactory{constructor(e,t){r()(this,"type",l),this.getStartServices=e,this.canGetJobs=t,this.canGetJobs=t}async getServices(){const[e]=await this.getStartServices(),{mlApiServicesProvider:t}=await Promise.resolve().then(a.bind(null,73));return{mlResultsService:t(new s.a(e.http)).results}}async create(){const{mlResultsService:e}=await this.getServices(),{AnomalySource:t}=await Promise.resolve().then(a.bind(null,397));return t.mlResultsService=e,t.canGetJobs=this.canGetJobs,t}}},376:function(e,t,a){"use strict";a.d(t,"a",(function(){return LayerSelector}));var n=a(5),r=a.n(n),s=a(16),l=a(44),i=a(2),o=a(261),c=a(377),u=a(12);class LayerSelector extends s.Component{constructor(...e){super(...e),r()(this,"_isMounted",!1),r()(this,"state",{}),r()(this,"onSelect",(e=>{const t=e[0].value;this._isMounted&&(this.setState({typicalActual:t}),this.props.onChange(t))}))}componentDidMount(){this._isMounted=!0}componentWillUnmount(){this._isMounted=!1}render(){const e=[{value:this.props.typicalActual,label:this.props.typicalActual}];return Object(u.jsx)(l.EuiFormRow,{label:i.i18n.translate("xpack.ml.maps.typicalActualLabel",{defaultMessage:"Type"}),display:"columnCompressed"},Object(u.jsx)(l.EuiComboBox,{singleSelection:!0,onChange:this.onSelect,options:[{value:o.a.ACTUAL,label:c.a},{value:o.a.TYPICAL,label:c.e},{value:o.a.TYPICAL_TO_ACTUAL,label:c.f}],selectedOptions:e}))}}},377:function(e,t,a){"use strict";a.d(t,"a",(function(){return o})),a.d(t,"e",(function(){return c})),a.d(t,"f",(function(){return u})),a.d(t,"b",(function(){return d})),a.d(t,"d",(function(){return AnomalySourceTooltipProperty})),a.d(t,"c",(function(){return AnomalySourceField}));var n=a(5),r=a.n(n),s=a(8),l=a(2),i=a(56);const o=l.i18n.translate("xpack.ml.maps.anomalyLayerActualLabel",{defaultMessage:"Actual"}),c=l.i18n.translate("xpack.ml.maps.anomalyLayerTypicalLabel",{defaultMessage:"Typical"}),u=l.i18n.translate("xpack.ml.maps.anomalyLayerTypicalToActualLabel",{defaultMessage:"Typical to actual"}),d={record_score:{label:l.i18n.translate("xpack.ml.maps.anomalyLayerRecordScoreLabel",{defaultMessage:"Record score"}),type:"number"},timestamp:{label:l.i18n.translate("xpack.ml.maps.anomalyLayerTimeStampLabel",{defaultMessage:"Time"}),type:"string"},fieldName:{label:l.i18n.translate("xpack.ml.maps.anomalyLayerFieldNameLabel",{defaultMessage:"Field name"}),type:"string"},functionDescription:{label:l.i18n.translate("xpack.ml.maps.anomalyLayerFunctionDescriptionLabel",{defaultMessage:"Function"}),type:"string"},actual:{},actualDisplay:{label:o,type:"string"},typical:{},typicalDisplay:{label:c,type:"string"},partition_field_name:{label:l.i18n.translate("xpack.ml.maps.anomalyLayerPartitionFieldNameLabel",{defaultMessage:"Partition field name"}),type:"string"},partition_field_value:{label:l.i18n.translate("xpack.ml.maps.anomalyLayerPartitionFieldValueLabel",{defaultMessage:"Partition field value"}),type:"string"},by_field_name:{label:l.i18n.translate("xpack.ml.maps.anomalyLayerByFieldNameLabel",{defaultMessage:"By field name"}),type:"string"},by_field_value:{label:l.i18n.translate("xpack.ml.maps.anomalyLayerByFieldValueLabel",{defaultMessage:"By field value"}),type:"string"},over_field_name:{label:l.i18n.translate("xpack.ml.maps.anomalyLayerOverFieldNameLabel",{defaultMessage:"Over field name"}),type:"string"},over_field_value:{label:l.i18n.translate("xpack.ml.maps.anomalyLayerOverFieldValueLabel",{defaultMessage:"Over field value"}),type:"string"}};class AnomalySourceTooltipProperty{constructor(e,t){this._label=e,this._value=t}async getESFilters(){return[]}getHtmlDisplayValue(){return this._value.toString()}getPropertyKey(){return this._label}getPropertyName(){return this._label}getRawValue(){return this._value.toString()}isFilterable(){return!1}}class AnomalySourceField{constructor({source:e,field:t}){r()(this,"_source",void 0),r()(this,"_field",void 0),this._source=e,this._field=t}async createTooltipProperty(e){return new AnomalySourceTooltipProperty(await this.getLabel(),Object(s.escape)(Array.isArray(e)?e.join():e||""))}async getDataType(){return d[this._field].type}async getLabel(){return d[this._field].label}getName(){return this._field}getMbFieldName(){return this.getName()}getOrigin(){return i.FIELD_ORIGIN.SOURCE}getRootName(){return this.getName()}getSource(){return this._source}isEqual(e){return this.getName()===e.getName()}isValid(){return!0}supportsFieldMetaFromLocalData(){return!0}supportsFieldMetaFromEs(){return!1}canValueBeFormatted(){return!1}async getExtendedStatsFieldMetaRequest(){return null}async getPercentilesFieldMetaRequest(e){return null}async getCategoricalFieldMetaRequest(e){return null}pluckRangeFromTileMetaFeature(e){return null}isCount(){return!1}}},397:function(e,t,a){"use strict";a.r(t),a.d(t,"AnomalySource",(function(){return anomaly_source_AnomalySource}));var n=a(5),r=a.n(n),s=a(2),l=a(16),i=a(56),o=a(70),c=a(377),u=a(375),d=a(261),p=a(45),m=a(44),y=a(376),b=a(12);class update_anomaly_source_editor_UpdateAnomalySourceEditor extends l.Component{constructor(...e){super(...e),r()(this,"state",{})}render(){return Object(b.jsx)(l.Fragment,null,Object(b.jsx)(m.EuiPanel,null,Object(b.jsx)(m.EuiTitle,{size:"xs"},Object(b.jsx)("h6",null,Object(b.jsx)(p.FormattedMessage,{id:"xpack.ml.maps.settingsEditorLabel",defaultMessage:"Anomalies"}))),Object(b.jsx)(m.EuiSpacer,{size:"s"}),Object(b.jsx)(y.a,{onChange:e=>{this.props.onChange({propName:"typicalActual",value:e})},typicalActual:this.props.typicalActual})),Object(b.jsx)(m.EuiSpacer,{size:"s"}))}}class anomaly_source_AnomalySource{static createDescriptor(e){if("string"!=typeof e.jobId)throw new Error("Job id is required for anomaly layer creation");return{type:u.b,jobId:e.jobId,typicalActual:e.typicalActual||d.a.ACTUAL}}constructor(e,t){r()(this,"_descriptor",void 0),this._descriptor=anomaly_source_AnomalySource.createDescriptor(e)}async getGeoJsonWithMeta(e,t,a,n){return{data:await Object(d.b)(anomaly_source_AnomalySource.mlResultsService,this._descriptor.jobId,this._descriptor.typicalActual,t),meta:{areResultsTrimmed:!1}}}canFormatFeatureProperties(){return!1}cloneDescriptor(){return{type:this._descriptor.type,jobId:this._descriptor.jobId,typicalActual:this._descriptor.typicalActual}}createField({fieldName:e}){if("record_score"!==e)throw new Error("Record score field name is required");return new c.c({source:this,field:e})}async createFieldFormatter(e){return null}destroy(){}getApplyGlobalQuery(){return!0}getApplyForceRefresh(){return!1}getApplyGlobalTime(){return!0}async getAttributions(){return[]}async getBoundsForFilters(e,t){return null}async getDisplayName(){return s.i18n.translate("xpack.ml.maps.anomalySource.displayLabel",{defaultMessage:"{typicalActual} for {jobId}",values:{typicalActual:this._descriptor.typicalActual,jobId:this._descriptor.jobId}})}getFieldByName(e){return"record_score"===e?new c.c({source:this,field:e}):null}getSourceStatus(){return{tooltipContent:null,areResultsTrimmed:!0}}getType(){return this._descriptor.type}isMvt(){return!0}showJoinEditor(){return!1}getFieldNames(){return Object.keys(c.b)}async getFields(){return this.getFieldNames().map((e=>new c.c({source:this,field:e})))}getGeoGridPrecision(e){return 0}isBoundsAware(){return!1}async getImmutableProperties(){return[{label:s.i18n.translate("xpack.ml.maps.anomalySourcePropLabel",{defaultMessage:"Job Id"}),value:this._descriptor.jobId}]}async isTimeAware(){return!0}renderSourceSettingsEditor({onChange:e}){return Object(b.jsx)(update_anomaly_source_editor_UpdateAnomalySourceEditor,{onChange:e,typicalActual:this._descriptor.typicalActual})}async supportsFitToBounds(){return!0}async getLicensedFeatures(){return[]}getMaxZoom(){return i.MAX_ZOOM}getMinZoom(){return i.MIN_ZOOM}getSourceTooltipContent(e){return{tooltipContent:s.i18n.translate("xpack.ml.maps.sourceTooltip",{defaultMessage:"Shows anomalies"}),areResultsTrimmed:!0}}async getSupportedShapeTypes(){return this._descriptor.typicalActual===d.a.TYPICAL_TO_ACTUAL?[i.VECTOR_SHAPE_TYPE.LINE]:[i.VECTOR_SHAPE_TYPE.POINT]}getSyncMeta(){return{jobId:this._descriptor.jobId,typicalActual:this._descriptor.typicalActual}}async getTooltipProperties(e){const t=[];for(const n in e)if(n!==o.GEOJSON_FEATURE_ID_PROPERTY_NAME&&e.hasOwnProperty(n)){var a;const r=null===(a=c.b[n])||void 0===a?void 0:a.label;r?t.push(new c.d(r,e[n])):c.b[n]||t.push(new c.d(n,e[n]))}return t}isFieldAware(){return!0}async getValueSuggestions(e,t){return[]}getAttributionProvider(){return null}getIndexPatternIds(){return[]}getInspectorAdapters(){}getJoinsDisabledReason(){return null}async getLeftJoinFields(){return[]}async getPreIndexedShape(e){return null}getQueryableIndexPatternIds(){return[]}isESSource(){return!1}isFilterByMapBounds(){return!1}isGeoGridPrecisionAware(){return!1}isQueryAware(){return!0}isRefreshTimerAware(){return!0}async getTimesliceMaskFieldName(){return null}async supportsFeatureEditing(){return!1}hasTooltipProperties(){return!0}async addFeature(){}async deleteFeature(){}getUpdateDueToTimeslice(){return!0}async getDefaultFields(){return{}}}r()(anomaly_source_AnomalySource,"mlResultsService",void 0),r()(anomaly_source_AnomalySource,"canGetJobs",void 0)},764:function(e,t,a){"use strict";a.r(t),a.d(t,"registerEmbeddables",(function(){return n.e})),a.d(t,"registerManagementSection",(function(){return r.a})),a.d(t,"registerMlUiActions",(function(){return s.b})),a.d(t,"registerSearchLinks",(function(){return _})),a.d(t,"registerMlAlerts",(function(){return I})),a.d(t,"registerMapExtension",(function(){return U}));var n=a(109),r=a(39),s=a(178),l=a(2),i=a(0);const o={id:"mlOverviewDeepLink",title:l.i18n.translate("xpack.ml.deepLink.overview",{defaultMessage:"Overview"}),path:`/${i.b.OVERVIEW}`},c={id:"mlAnomalyDetectionDeepLink",title:l.i18n.translate("xpack.ml.deepLink.anomalyDetection",{defaultMessage:"Anomaly Detection"}),path:`/${i.b.ANOMALY_DETECTION_JOBS_MANAGE}`},u={id:"mlDataFrameAnalyticsDeepLink",title:l.i18n.translate("xpack.ml.deepLink.dataFrameAnalytics",{defaultMessage:"Data Frame Analytics"}),path:`/${i.b.DATA_FRAME_ANALYTICS_JOBS_MANAGE}`},d={id:"mlModelManagementDeepLink",title:l.i18n.translate("xpack.ml.deepLink.trainedModels",{defaultMessage:"Trained Models"}),path:`/${i.b.TRAINED_MODELS_MANAGE}`,deepLinks:[{id:"mlNodesOverviewDeepLink",title:l.i18n.translate("xpack.ml.deepLink.modelManagement",{defaultMessage:"Model Management"}),path:`/${i.b.TRAINED_MODELS_MANAGE}`},{id:"mlNodesOverviewDeepLink",title:l.i18n.translate("xpack.ml.deepLink.nodesOverview",{defaultMessage:"Nodes"}),path:`/${i.b.TRAINED_MODELS_NODES}`}]},p={id:"dataVisualizerDeepLink",title:l.i18n.translate("xpack.ml.deepLink.dataVisualizer",{defaultMessage:"Data Visualizer"}),path:`/${i.b.DATA_VISUALIZER}`},m={id:"mlFileUploadDeepLink",title:l.i18n.translate("xpack.ml.deepLink.fileUpload",{defaultMessage:"File Upload"}),keywords:["CSV","JSON"],path:`/${i.b.DATA_VISUALIZER_FILE}`},y={id:"mlIndexDataVisualizerDeepLink",title:l.i18n.translate("xpack.ml.deepLink.indexDataVisualizer",{defaultMessage:"Index Data Visualizer"}),path:`/${i.b.DATA_VISUALIZER_INDEX_SELECT}`},b={id:"mlSettingsDeepLink",title:l.i18n.translate("xpack.ml.deepLink.settings",{defaultMessage:"Settings"}),path:`/${i.b.SETTINGS}`,deepLinks:[{id:"mlCalendarSettingsDeepLink",title:l.i18n.translate("xpack.ml.deepLink.calendarSettings",{defaultMessage:"Calendars"}),path:`/${i.b.CALENDARS_MANAGE}`},{id:"mlFilterListsSettingsDeepLink",title:l.i18n.translate("xpack.ml.deepLink.filterListsSettings",{defaultMessage:"Filter Lists"}),path:`/${i.b.SETTINGS}`}]};function g(e){const t=[p,m,y];return!0===e&&t.push(o,c,u,d,b),t}function _(e,t){e.next((()=>({keywords:[l.i18n.translate("xpack.ml.keyword.ml",{defaultMessage:"ML"})],deepLinks:g(t)})))}var h=a(16),f=a(11),A=a(4),v=a(38),S=a(19);const M=Object(S.g)(),L=Object(S.d)({min:1});var j=a(260);function I(e,t){e.ruleTypeRegistry.register({id:f.d.ANOMALY_DETECTION,description:l.i18n.translate("xpack.ml.alertTypes.anomalyDetection.description",{defaultMessage:"Alert when anomaly detection jobs results match the condition."}),iconClass:"bell",documentationUrl:e=>e.links.ml.alertingRules,ruleParamsExpression:Object(h.lazy)((()=>a.e(13).then(a.bind(null,766)))),validate:e=>{var t,a,n,r,s,i,o,c;const u={errors:{jobSelection:new Array,severity:new Array,resultType:new Array,topNBuckets:new Array,lookbackInterval:new Array}};return null!==(t=e.jobSelection)&&void 0!==t&&null!==(a=t.jobIds)&&void 0!==a&&a.length||null!==(n=e.jobSelection)&&void 0!==n&&null!==(r=n.groupIds)&&void 0!==r&&r.length||u.errors.jobSelection.push(l.i18n.translate("xpack.ml.alertTypes.anomalyDetection.jobSelection.errorMessage",{defaultMessage:"Job selection is required"})),(Array.isArray(null===(s=e.jobSelection)||void 0===s?void 0:s.groupIds)&&(null===(i=e.jobSelection)||void 0===i?void 0:i.groupIds.length)>0||Array.isArray(null===(o=e.jobSelection)||void 0===o?void 0:o.jobIds)&&(null===(c=e.jobSelection)||void 0===c?void 0:c.jobIds.length)>1)&&u.errors.jobSelection.push(l.i18n.translate("xpack.ml.alertTypes.anomalyDetection.singleJobSelection.errorMessage",{defaultMessage:"Only one job per rule is allowed"})),void 0===e.severity&&u.errors.severity.push(l.i18n.translate("xpack.ml.alertTypes.anomalyDetection.severity.errorMessage",{defaultMessage:"Anomaly severity is required"})),void 0===e.resultType&&u.errors.resultType.push(l.i18n.translate("xpack.ml.alertTypes.anomalyDetection.resultType.errorMessage",{defaultMessage:"Result type is required"})),e.lookbackInterval&&M(e.lookbackInterval)&&u.errors.lookbackInterval.push(l.i18n.translate("xpack.ml.alertTypes.anomalyDetection.lookbackInterval.errorMessage",{defaultMessage:"Lookback interval is invalid"})),"number"==typeof e.topNBuckets&&L(e.topNBuckets)&&u.errors.topNBuckets.push(l.i18n.translate("xpack.ml.alertTypes.anomalyDetection.topNBuckets.errorMessage",{defaultMessage:"Number of buckets is invalid"})),u},requiresAppContext:!1,defaultActionMessage:l.i18n.translate("xpack.ml.alertTypes.anomalyDetection.defaultActionMessage",{defaultMessage:"Elastic Stack Machine Learning Alert:\n- Job IDs: \\{\\{context.jobIds\\}\\}\n- Time: \\{\\{context.timestampIso8601\\}\\}\n- Anomaly score: \\{\\{context.score\\}\\}\n\n\\{\\{context.message\\}\\}\n\n\\{\\{#context.topInfluencers.length\\}\\}\n  Top influencers:\n  \\{\\{#context.topInfluencers\\}\\}\n    \\{\\{influencer_field_name\\}\\} = \\{\\{influencer_field_value\\}\\} [\\{\\{score\\}\\}]\n  \\{\\{/context.topInfluencers\\}\\}\n\\{\\{/context.topInfluencers.length\\}\\}\n\n\\{\\{#context.topRecords.length\\}\\}\n  Top records:\n  \\{\\{#context.topRecords\\}\\}\n    \\{\\{function\\}\\}(\\{\\{field_name\\}\\}) \\{\\{by_field_value\\}\\}\\{\\{over_field_value\\}\\}\\{\\{partition_field_value\\}\\} [\\{\\{score\\}\\}]. Typical: \\{\\{typical\\}\\}, Actual: \\{\\{actual\\}\\}\n  \\{\\{/context.topRecords\\}\\}\n\\{\\{/context.topRecords.length\\}\\}\n\n\\{\\{! Replace kibanaBaseUrl if not configured in Kibana \\}\\}\n[Open in Anomaly Explorer](\\{\\{\\{kibanaBaseUrl\\}\\}\\}\\{\\{\\{context.anomalyExplorerUrl\\}\\}\\})\n"})}),function(e,t){e.ruleTypeRegistry.register({id:f.d.AD_JOBS_HEALTH,description:l.i18n.translate("xpack.ml.alertTypes.jobsHealthAlertingRule.description",{defaultMessage:"Alert when anomaly detection jobs experience operational issues. Enable suitable alerts for critically important jobs."}),iconClass:"bell",documentationUrl:e=>e.links.ml.alertingRules,ruleParamsExpression:Object(h.lazy)((()=>a.e(14).then(a.bind(null,769)))),validate:e=>{var t,a,n,r;const s={errors:{includeJobs:new Array,testsConfig:new Array,delayedData:new Array}};null!==(t=e.includeJobs)&&void 0!==t&&null!==(a=t.jobIds)&&void 0!==a&&a.length||null!==(n=e.includeJobs)&&void 0!==n&&null!==(r=n.groupIds)&&void 0!==r&&r.length||s.errors.includeJobs.push(l.i18n.translate("xpack.ml.alertTypes.jobsHealthAlertingRule.includeJobs.errorMessage",{defaultMessage:"Job selection is required"}));const i=Object(j.b)(e.testsConfig);return Object.values(i).every((e=>!1===(null==e?void 0:e.enabled)))&&s.errors.testsConfig.push(l.i18n.translate("xpack.ml.alertTypes.jobsHealthAlertingRule.testsConfig.errorMessage",{defaultMessage:"At least one health check must be enabled."})),i.delayedData.timeInterval&&M(i.delayedData.timeInterval)&&s.errors.delayedData.push(l.i18n.translate("xpack.ml.alertTypes.jobsHealthAlertingRule.testsConfig.delayedData.timeIntervalErrorMessage",{defaultMessage:"Invalid time interval"})),0===i.delayedData.docsCount&&s.errors.delayedData.push(l.i18n.translate("xpack.ml.alertTypes.jobsHealthAlertingRule.testsConfig.delayedData.docsCountErrorMessage",{defaultMessage:"Invalid number of documents"})),s},requiresAppContext:!1,defaultActionMessage:l.i18n.translate("xpack.ml.alertTypes.jobsHealthAlertingRule.defaultActionMessage",{defaultMessage:"[\\{\\{rule.name\\}\\}] Anomaly detection jobs health check result:\n\\{\\{context.message\\}\\}\n\\{\\{#context.results\\}\\}\n  Job ID: \\{\\{job_id\\}\\}\n  \\{\\{#datafeed_id\\}\\}Datafeed ID: \\{\\{datafeed_id\\}\\}\n  \\{\\{/datafeed_id\\}\\}\\{\\{#datafeed_state\\}\\}Datafeed state: \\{\\{datafeed_state\\}\\}\n  \\{\\{/datafeed_state\\}\\}\\{\\{#memory_status\\}\\}Memory status: \\{\\{memory_status\\}\\}\n  \\{\\{/memory_status\\}\\}\\{\\{#model_bytes\\}\\}Model size: \\{\\{model_bytes\\}\\}\n  \\{\\{/model_bytes\\}\\}\\{\\{#model_bytes_memory_limit\\}\\}Model memory limit: \\{\\{model_bytes_memory_limit\\}\\}\n  \\{\\{/model_bytes_memory_limit\\}\\}\\{\\{#peak_model_bytes\\}\\}Peak model bytes: \\{\\{peak_model_bytes\\}\\}\n  \\{\\{/peak_model_bytes\\}\\}\\{\\{#model_bytes_exceeded\\}\\}Model exceeded: \\{\\{model_bytes_exceeded\\}\\}\n  \\{\\{/model_bytes_exceeded\\}\\}\\{\\{#log_time\\}\\}Memory logging time: \\{\\{log_time\\}\\}\n  \\{\\{/log_time\\}\\}\\{\\{#failed_category_count\\}\\}Failed category count: \\{\\{failed_category_count\\}\\}\n  \\{\\{/failed_category_count\\}\\}\\{\\{#annotation\\}\\}Annotation: \\{\\{annotation\\}\\}\n  \\{\\{/annotation\\}\\}\\{\\{#missed_docs_count\\}\\}Number of missed documents: \\{\\{missed_docs_count\\}\\}\n  \\{\\{/missed_docs_count\\}\\}\\{\\{#end_timestamp\\}\\}Latest finalized bucket with missing docs: \\{\\{end_timestamp\\}\\}\n  \\{\\{/end_timestamp\\}\\}\\{\\{#errors\\}\\}Error message: \\{\\{message\\}\\} \\{\\{/errors\\}\\}\n\\{\\{/context.results\\}\\}\n"})})}(e),t&&function(e){e.registerNavigation(A.e,f.d.ANOMALY_DETECTION,(e=>{var t,a;const n=e.params,r=[...new Set([...null!==(t=n.jobSelection.jobIds)&&void 0!==t?t:[],...null!==(a=n.jobSelection.groupIds)&&void 0!==a?a:[]])];return Object(v.d)("",{jobIds:r})}))}(t)}var k=a(375),T=a(5),x=a.n(T),E=a(44),D=a(56),O=a(17),C=a(8),w=a(12);class anomaly_job_selector_AnomalyJobSelector extends h.Component{constructor(...e){super(...e),x()(this,"_isMounted",!1),x()(this,"state",{}),x()(this,"onJobIdSelect",(e=>{const t=e[0].value;this._isMounted&&(this.setState({jobId:t}),this.props.onJobChange(t))}))}async _loadJobs(){const e=(await this.props.mlJobsService.jobIdsWithGeo()).map((e=>({label:e,value:e})));this._isMounted&&!Object(C.isEqual)(e,this.state.jobIdList)&&this.setState({jobIdList:e})}componentDidUpdate(e,t){this._loadJobs()}componentDidMount(){this._isMounted=!0,this._loadJobs()}componentWillUnmount(){this._isMounted=!1}render(){return this.state.jobIdList?Object(w.jsx)(E.EuiFormRow,{label:l.i18n.translate("xpack.ml.maps.jobIdLabel",{defaultMessage:"Job ID"}),display:"columnCompressed"},Object(w.jsx)(E.EuiComboBox,{singleSelection:!0,onChange:this.onJobIdSelect,options:this.state.jobIdList,selectedOptions:this.state.jobId?[{value:this.state.jobId,label:this.state.jobId}]:[]})):null}}var F=a(376),N=a(261);class create_anomaly_source_editor_CreateAnomalySourceEditor extends h.Component{constructor(...e){super(...e),x()(this,"_isMounted",!1),x()(this,"state",{}),x()(this,"onTypicalActualChange",(e=>{this._isMounted&&this.setState({typicalActual:e},(()=>{this.configChange()}))})),x()(this,"previewLayer",(e=>{this._isMounted&&this.setState({jobId:e},(()=>{this.configChange()}))}))}configChange(){this.state.jobId&&this.props.onSourceConfigChange({jobId:this.state.jobId,typicalActual:this.state.typicalActual||N.a.ACTUAL})}componentDidMount(){this._isMounted=!0}render(){const e=this.state.jobId?Object(w.jsx)(F.a,{onChange:this.onTypicalActualChange,typicalActual:this.state.typicalActual||N.a.ACTUAL}):null;return Object(w.jsx)(E.EuiPanel,null,Object(w.jsx)(anomaly_job_selector_AnomalyJobSelector,{onJobChange:this.previewLayer,mlJobsService:this.props.mlJobsService}),e)}}var R=a(397),P=a(105);const J={type:D.STYLE_TYPE.DYNAMIC,options:{customColorRamp:O.SEVERITY_COLOR_RAMP,field:{name:"record_score",origin:D.FIELD_ORIGIN.SOURCE},useCustomColorRamp:!0}};class anomaly_layer_wizard_factory_AnomalyLayerWizardFactory{constructor(e,t){x()(this,"type","ML_ANOMALIES"),this.getStartServices=e,this.canGetJobs=t,this.canGetJobs=t}async getServices(){const[e]=await this.getStartServices(),{jobsApiProvider:t}=await Promise.resolve().then(a.bind(null,219));return{mlJobsService:t(new P.a(e.http))}}async create(){const{mlJobsService:e}=await this.getServices(),{anomalyLayerWizard:t}=await a.e(23).then(a.bind(null,762));return t.getIsDisabled=()=>!this.canGetJobs,t.renderWizard=({previewLayers:t})=>Object(w.jsx)(create_anomaly_source_editor_CreateAnomalySourceEditor,{onSourceConfigChange:e=>{if(!e)return void t([]);const a={id:Object(E.htmlIdGenerator)()(),type:D.LAYER_TYPE.GEOJSON_VECTOR,sourceDescriptor:R.AnomalySource.createDescriptor({jobId:e.jobId,typicalActual:e.typicalActual}),style:{type:"VECTOR",properties:{fillColor:J,lineColor:J},isTimeAware:!1}};t([a])},mlJobsService:e}),t}}async function U(e,t,a){const n=new k.a(t.getStartServices,a),r=new anomaly_layer_wizard_factory_AnomalyLayerWizardFactory(t.getStartServices,a),s=await r.create();e.registerSource({type:n.type,ConstructorFunction:await n.create()}),e.registerLayerWizard(s)}}}]);