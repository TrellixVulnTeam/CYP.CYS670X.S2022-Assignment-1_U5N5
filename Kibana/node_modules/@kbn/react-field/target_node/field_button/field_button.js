"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FieldButton = FieldButton;
exports.SIZES = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

require("./field_button.scss");

var _classnames = _interopRequireDefault(require("classnames"));

var _react = _interopRequireDefault(require("react"));

/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */
const sizeToClassNameMap = {
  s: 'kbnFieldButton--small',
  m: null
};
const SIZES = Object.keys(sizeToClassNameMap);
exports.SIZES = SIZES;

function FieldButton({
  size = 'm',
  isActive = false,
  fieldIcon,
  fieldName,
  fieldInfoIcon,
  fieldAction,
  className,
  isDraggable = false,
  onClick,
  dataTestSubj,
  buttonProps,
  ...rest
}) {
  const classes = (0, _classnames.default)('kbnFieldButton', size ? sizeToClassNameMap[size] : null, {
    'kbnFieldButton-isActive': isActive
  }, {
    'kbnFieldButton--isDraggable': isDraggable
  }, className);
  const contentClasses = (0, _classnames.default)('kbn-resetFocusState', 'kbnFieldButton__button');

  const innerContent = /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, fieldIcon && /*#__PURE__*/_react.default.createElement("span", {
    className: "kbnFieldButton__fieldIcon"
  }, fieldIcon), fieldName && /*#__PURE__*/_react.default.createElement("span", {
    className: "kbnFieldButton__name"
  }, fieldName), fieldInfoIcon && /*#__PURE__*/_react.default.createElement("div", {
    className: "kbnFieldButton__infoIcon"
  }, fieldInfoIcon));

  return /*#__PURE__*/_react.default.createElement("div", (0, _extends2.default)({
    className: classes
  }, rest), onClick ? /*#__PURE__*/_react.default.createElement("button", (0, _extends2.default)({
    onClick: e => {
      if (e.type === 'click') {
        e.currentTarget.focus();
      }

      onClick();
    },
    "data-test-subj": dataTestSubj,
    className: contentClasses
  }, buttonProps), innerContent) : /*#__PURE__*/_react.default.createElement("div", {
    className: contentClasses,
    "data-test-subj": dataTestSubj
  }, innerContent), fieldAction && /*#__PURE__*/_react.default.createElement("div", {
    className: "kbnFieldButton__fieldAction"
  }, fieldAction));
}