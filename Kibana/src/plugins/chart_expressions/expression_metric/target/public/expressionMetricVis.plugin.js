!function(e){function t(t){for(var n,o,i=t[0],s=t[1],a=0,l=[];a<i.length;a++)o=i[a],Object.prototype.hasOwnProperty.call(r,o)&&r[o]&&l.push(r[o][0]),r[o]=0;for(n in s)Object.prototype.hasOwnProperty.call(s,n)&&(e[n]=s[n]);for(c&&c(t);l.length;)l.shift()()}var n={},r={0:0};function o(t){if(n[t])return n[t].exports;var r=n[t]={i:t,l:!1,exports:{}};return e[t].call(r.exports,r,r.exports,o),r.l=!0,r.exports}o.e=function(e){var t=[],n=r[e];if(0!==n)if(n)t.push(n[2]);else{var i=new Promise((function(t,o){n=r[e]=[t,o]}));t.push(n[2]=i);var s,a=document.createElement("script");a.charset="utf-8",a.timeout=120,o.nc&&a.setAttribute("nonce",o.nc),a.src=function(e){return o.p+"expressionMetricVis.chunk."+e+".js"}(e);var c=new Error;s=function(t){a.onerror=a.onload=null,clearTimeout(l);var n=r[e];if(0!==n){if(n){var o=t&&("load"===t.type?"missing":t.type),i=t&&t.target&&t.target.src;c.message="Loading chunk "+e+" failed.\n("+o+": "+i+")",c.name="ChunkLoadError",c.type=o,c.request=i,n[1](c)}r[e]=void 0}};var l=setTimeout((function(){s({type:"timeout",target:a})}),12e4);a.onerror=a.onload=s,document.head.appendChild(a)}return Promise.all(t)},o.m=e,o.c=n,o.d=function(e,t,n){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)o.d(n,r,function(t){return e[t]}.bind(null,r));return n},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="",o.oe=function(e){throw console.error(e),e};var i=window.expressionMetricVis_bundle_jsonpfunction=window.expressionMetricVis_bundle_jsonpfunction||[],s=i.push.bind(i);i.push=t,i=i.slice();for(var a=0;a<i.length;a++)t(i[a]);var c=s;o(o.s=10)}([function(e,t){e.exports=__kbnSharedDeps__.KbnI18n},function(e,t,n){n.r(t);var r=__kbnBundles__.get("plugin/charts/common");Object.defineProperties(t,Object.getOwnPropertyDescriptors(r))},function(e,t){e.exports=__kbnSharedDeps__.EmotionReact},function(e,t,n){n.r(t);var r=__kbnBundles__.get("plugin/kibanaUtils/public");Object.defineProperties(t,Object.getOwnPropertyDescriptors(r))},function(e,t,n){"use strict";n.d(t,"a",(function(){return o})),n.d(t,"c",(function(){return i})),n.d(t,"b",(function(){return s})),n.d(t,"d",(function(){return a}));var r=n(3);const[o,i]=Object(r.createGetterSetter)("fieldFormats"),[s,a]=Object(r.createGetterSetter)("palette")},function(e,t){e.exports=__kbnSharedDeps__.ReactDom},function(e,t){e.exports=__kbnSharedDeps__.React},function(e,t,n){n.r(t);var r=__kbnBundles__.get("plugin/visualizations/common/prepare_log_table");Object.defineProperties(t,Object.getOwnPropertyDescriptors(r))},function(e,t,n){n.r(t);var r=__kbnBundles__.get("plugin/kibanaReact/public");Object.defineProperties(t,Object.getOwnPropertyDescriptors(r))},function(e,t,n){n.r(t);var r=__kbnBundles__.get("plugin/visualizations/public");Object.defineProperties(t,Object.getOwnPropertyDescriptors(r))},function(e,t,n){n(11),__kbnBundles__.define("plugin/expressionMetricVis/public",n,12)},function(e,t,n){n.p=window.__kbnPublicPath__.expressionMetricVis},function(e,t,n){"use strict";n.r(t),n.d(t,"plugin",(function(){return g}));var r=n(0);var o=n(7),i=n(1);const s="metricVis",a=()=>({name:s,type:"render",inputTypes:["datatable"],help:r.i18n.translate("expressionMetricVis.function.help",{defaultMessage:"Metric visualization"}),args:{percentageMode:{types:["boolean"],default:!1,help:r.i18n.translate("expressionMetricVis.function.percentageMode.help",{defaultMessage:"Shows metric in percentage mode. Requires colorRange to be set."})},colorMode:{types:["string"],default:`"${i.ColorMode.None}"`,options:[i.ColorMode.None,i.ColorMode.Labels,i.ColorMode.Background],help:r.i18n.translate("expressionMetricVis.function.colorMode.help",{defaultMessage:"Which part of metric to color"})},palette:{types:["palette"],help:r.i18n.translate("expressionMetricVis.function.palette.help",{defaultMessage:"Provides colors for the values, based on the bounds."})},showLabels:{types:["boolean"],default:!0,help:r.i18n.translate("expressionMetricVis.function.showLabels.help",{defaultMessage:"Shows labels under the metric values."})},font:{types:["style"],help:r.i18n.translate("expressionMetricVis.function.font.help",{defaultMessage:"Font settings."}),default:'{font size=60 align="center"}'},metric:{types:["vis_dimension"],help:r.i18n.translate("expressionMetricVis.function.metric.help",{defaultMessage:"metric dimension configuration"}),required:!0,multi:!0},bucket:{types:["vis_dimension"],help:r.i18n.translate("expressionMetricVis.function.bucket.help",{defaultMessage:"bucket dimension configuration"})}},fn(e,t,n){var a,c,l;if(t.percentageMode&&(null===(a=t.palette)||void 0===a||!a.params))throw new Error("Palette must be provided when using percentageMode");if(null!=n&&null!==(c=n.inspectorAdapters)&&void 0!==c&&c.tables){const i=[[t.metric,r.i18n.translate("expressionMetricVis.function.dimension.metric",{defaultMessage:"Metric"})]];t.bucket&&i.push([[t.bucket],r.i18n.translate("expressionMetricVis.function.dimension.splitGroup",{defaultMessage:"Split group"})]);const s=Object(o.prepareLogTable)(e,i);n.inspectorAdapters.tables.logDatatable("default",s)}return{type:"render",as:s,value:{visData:e,visType:"metric",visConfig:{metric:{palette:null===(l=t.palette)||void 0===l?void 0:l.params,percentageMode:t.percentageMode,metricColorMode:t.colorMode,labels:{show:t.showLabels},style:{bgColor:t.colorMode===i.ColorMode.Background,labelColor:t.colorMode===i.ColorMode.Labels,...t.font}},dimensions:{metrics:t.metric,...t.bucket?{bucket:t.bucket}:{}}}}}}});var c=n(4),l=n(6),u=n(5),p=n(8),d=n(9),f=n(2);const b=Object(l.lazy)((()=>n.e(1).then(n.bind(null,24))));class plugin_ExpressionMetricPlugin{setup(e,{expressions:t,charts:n}){var r;t.registerFunction(a),t.registerRenderer((r=e.theme,()=>({name:s,displayName:"metric visualization",reuseDomNode:!0,render:async(e,{visData:t,visConfig:n},o)=>{var i;o.onDestroy((()=>{Object(u.unmountComponentAtNode)(e)})),Object(u.render)(Object(f.jsx)(p.KibanaThemeProvider,{theme$:r.theme$},Object(f.jsx)(d.VisualizationContainer,{className:"mtrVis",showNoResult:!(null!==(i=t.rows)&&void 0!==i&&i.length),handlers:o},Object(f.jsx)(b,{visData:t,visParams:n,renderComplete:o.done,fireEvent:o.event}))),e)}}))),n.palettes.getPalettes().then((e=>{Object(c.d)(e)}))}start(e,{fieldFormats:t}){Object(c.c)(t)}}function g(){return new plugin_ExpressionMetricPlugin}},function(e,t){e.exports=__kbnSharedDeps_npm__},function(e,t){e.exports=__kbnSharedDeps__.Classnames},function(e,t){e.exports=__kbnSharedDeps__.ElasticEui}]);