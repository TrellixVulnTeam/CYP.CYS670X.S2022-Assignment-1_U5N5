(window.expressions_bundle_jsonpfunction=window.expressions_bundle_jsonpfunction||[]).push([[8],{56:function(e,r,t){"use strict";t.r(r),t.d(r,"ExpressionRenderHandler",(function(){return render_ExpressionRenderHandler})),t.d(r,"render",(function(){return l}));var n=t(0),s=t.n(n),i=t(2),d=t(4),o=t(3),a=t(1),h=t(10);const u=(e,r,t)=>{"AbortError"!==r.name?(Object(h.c)().toasts.addError(r,{title:a.i18n.translate("expressions.defaultErrorRenderer.errorTitle",{defaultMessage:"Error in visualisation"}),toastMessage:r.message}),t.done()):t.done()};class render_ExpressionRenderHandler{constructor(e,{onRenderError:r,renderMode:t,syncColors:n,interactive:a,hasCompatibleActions:l=(async()=>!1)}={}){s()(this,"render$",void 0),s()(this,"update$",void 0),s()(this,"events$",void 0),s()(this,"element",void 0),s()(this,"destroyFn",void 0),s()(this,"renderCount",0),s()(this,"renderSubject",void 0),s()(this,"eventsSubject",void 0),s()(this,"updateSubject",void 0),s()(this,"handlers",void 0),s()(this,"onRenderError",void 0),s()(this,"render",(async(e,r)=>{if(!e||"object"!=typeof e)return this.handleRenderError(new Error("invalid data provided to the expression renderer"));if("render"!==e.type||!e.as)return"error"===e.type?this.handleRenderError(e.error):this.handleRenderError(new Error("invalid data provided to the expression renderer"));if(!Object(h.d)().get(e.as))return this.handleRenderError(new Error(`invalid renderer id '${e.as}'`));try{await Object(h.d)().get(e.as).render(this.element,e.value,{...this.handlers,uiState:r})}catch(e){return this.handleRenderError(e)}})),s()(this,"destroy",(()=>{this.renderSubject.complete(),this.eventsSubject.complete(),this.updateSubject.complete(),this.destroyFn&&this.destroyFn()})),s()(this,"getElement",(()=>this.element)),s()(this,"handleRenderError",(e=>{this.onRenderError(this.element,e,this.handlers)})),this.element=e,this.eventsSubject=new i.Subject,this.events$=this.eventsSubject.asObservable(),this.onRenderError=r||u,this.renderSubject=new i.BehaviorSubject(null),this.render$=this.renderSubject.asObservable().pipe(Object(d.filter)(o.isNumber)),this.updateSubject=new i.Subject,this.update$=this.updateSubject.asObservable(),this.handlers={onDestroy:e=>{this.destroyFn=e},done:()=>{this.renderCount++,this.renderSubject.next(this.renderCount)},reload:()=>{this.updateSubject.next(null)},update:e=>{this.updateSubject.next(e)},event:e=>{this.eventsSubject.next(e)},getRenderMode:()=>t||"view",isSyncColorsEnabled:()=>n||!1,isInteractive:()=>null==a||a,hasCompatibleActions:l}}}const l=async(e,r,t)=>{const n=new render_ExpressionRenderHandler(e,t);return n.render(r),n}}}]);